{"ast":null,"code":"export const countries = [{\n  code: 'US',\n  name: 'United States'\n}, {\n  code: 'GB',\n  name: 'United Kingdom'\n}, {\n  code: 'CA',\n  name: 'Canada'\n}, {\n  code: 'AU',\n  name: 'Australia'\n}, {\n  code: 'NZ',\n  name: 'New Zealand'\n}, {\n  code: 'IN',\n  name: 'India'\n}, {\n  code: 'JP',\n  name: 'Japan'\n}, {\n  code: 'CN',\n  name: 'China'\n}, {\n  code: 'DE',\n  name: 'Germany'\n}, {\n  code: 'FR',\n  name: 'France'\n}, {\n  code: 'IT',\n  name: 'Italy'\n}, {\n  code: 'ES',\n  name: 'Spain'\n}, {\n  code: 'BR',\n  name: 'Brazil'\n}, {\n  code: 'MX',\n  name: 'Mexico'\n}, {\n  code: 'RU',\n  name: 'Russia'\n}, {\n  code: 'ZA',\n  name: 'South Africa'\n}, {\n  code: 'KR',\n  name: 'South Korea'\n}, {\n  code: 'SG',\n  name: 'Singapore'\n}, {\n  code: 'AE',\n  name: 'United Arab Emirates'\n}, {\n  code: 'SA',\n  name: 'Saudi Arabia'\n}, {\n  code: 'EG',\n  name: 'Egypt'\n}, {\n  code: 'NG',\n  name: 'Nigeria'\n}, {\n  code: 'KE',\n  name: 'Kenya'\n}, {\n  code: 'IL',\n  name: 'Israel'\n}, {\n  code: 'TR',\n  name: 'Turkey'\n}, {\n  code: 'SE',\n  name: 'Sweden'\n}, {\n  code: 'NO',\n  name: 'Norway'\n}, {\n  code: 'DK',\n  name: 'Denmark'\n}, {\n  code: 'FI',\n  name: 'Finland'\n}, {\n  code: 'NL',\n  name: 'Netherlands'\n}].sort((a, b) => a.name.localeCompare(b.name));","map":{"version":3,"names":["countries","code","name","sort","a","b","localeCompare"],"sources":["C:/Users/skole/CascadeProjects/FinalCount/client/src/utils/countries.js"],"sourcesContent":["export const countries = [\n  { code: 'US', name: 'United States' },\n  { code: 'GB', name: 'United Kingdom' },\n  { code: 'CA', name: 'Canada' },\n  { code: 'AU', name: 'Australia' },\n  { code: 'NZ', name: 'New Zealand' },\n  { code: 'IN', name: 'India' },\n  { code: 'JP', name: 'Japan' },\n  { code: 'CN', name: 'China' },\n  { code: 'DE', name: 'Germany' },\n  { code: 'FR', name: 'France' },\n  { code: 'IT', name: 'Italy' },\n  { code: 'ES', name: 'Spain' },\n  { code: 'BR', name: 'Brazil' },\n  { code: 'MX', name: 'Mexico' },\n  { code: 'RU', name: 'Russia' },\n  { code: 'ZA', name: 'South Africa' },\n  { code: 'KR', name: 'South Korea' },\n  { code: 'SG', name: 'Singapore' },\n  { code: 'AE', name: 'United Arab Emirates' },\n  { code: 'SA', name: 'Saudi Arabia' },\n  { code: 'EG', name: 'Egypt' },\n  { code: 'NG', name: 'Nigeria' },\n  { code: 'KE', name: 'Kenya' },\n  { code: 'IL', name: 'Israel' },\n  { code: 'TR', name: 'Turkey' },\n  { code: 'SE', name: 'Sweden' },\n  { code: 'NO', name: 'Norway' },\n  { code: 'DK', name: 'Denmark' },\n  { code: 'FI', name: 'Finland' },\n  { code: 'NL', name: 'Netherlands' }\n].sort((a, b) => a.name.localeCompare(b.name));\n"],"mappings":"AAAA,OAAO,MAAMA,SAAS,GAAG,CACvB;EAAEC,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAgB,CAAC,EACrC;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAiB,CAAC,EACtC;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAS,CAAC,EAC9B;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAY,CAAC,EACjC;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAc,CAAC,EACnC;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAQ,CAAC,EAC7B;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAQ,CAAC,EAC7B;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAQ,CAAC,EAC7B;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAU,CAAC,EAC/B;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAS,CAAC,EAC9B;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAQ,CAAC,EAC7B;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAQ,CAAC,EAC7B;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAS,CAAC,EAC9B;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAS,CAAC,EAC9B;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAS,CAAC,EAC9B;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAe,CAAC,EACpC;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAc,CAAC,EACnC;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAY,CAAC,EACjC;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAuB,CAAC,EAC5C;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAe,CAAC,EACpC;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAQ,CAAC,EAC7B;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAU,CAAC,EAC/B;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAQ,CAAC,EAC7B;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAS,CAAC,EAC9B;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAS,CAAC,EAC9B;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAS,CAAC,EAC9B;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAS,CAAC,EAC9B;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAU,CAAC,EAC/B;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAU,CAAC,EAC/B;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAc,CAAC,CACpC,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACF,IAAI,CAACI,aAAa,CAACD,CAAC,CAACH,IAAI,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}