{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\skole\\\\CascadeProjects\\\\FinalCount\\\\client\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      loadUser(token);\n    } else {\n      setLoading(false);\n    }\n  }, []);\n  const loadUser = async token => {\n    try {\n      const config = {\n        headers: {\n          'x-auth-token': token\n        }\n      };\n      const res = await axios.get('http://localhost:5000/api/user/profile', config);\n      setUser(res.data);\n    } catch (error) {\n      localStorage.removeItem('token');\n    }\n    setLoading(false);\n  };\n  const login = async (email, password) => {\n    try {\n      const res = await axios.post('http://localhost:5000/api/auth/login', {\n        email,\n        password\n      });\n      localStorage.setItem('token', res.data.token);\n      await loadUser(res.data.token);\n      return true;\n    } catch (error) {\n      var _error$response, _error$response$data;\n      throw ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed';\n    }\n  };\n  const register = async (email, password) => {\n    try {\n      const res = await axios.post('http://localhost:5000/api/auth/register', {\n        email,\n        password\n      });\n      localStorage.setItem('token', res.data.token);\n      await loadUser(res.data.token);\n      return true;\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      throw ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Registration failed';\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n  };\n  const updateProfile = async profileData => {\n    try {\n      const config = {\n        headers: {\n          'x-auth-token': localStorage.getItem('token')\n        }\n      };\n      const res = await axios.put('http://localhost:5000/api/user/profile', profileData, config);\n      setUser(res.data);\n      return true;\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      throw ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Profile update failed';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      loading,\n      login,\n      register,\n      logout,\n      updateProfile\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","token","localStorage","getItem","loadUser","config","headers","res","get","data","error","removeItem","login","email","password","post","setItem","_error$response","_error$response$data","response","message","register","_error$response2","_error$response2$data","logout","updateProfile","profileData","put","_error$response3","_error$response3$data","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/skole/CascadeProjects/FinalCount/client/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\nimport axios from 'axios';\n\nconst AuthContext = createContext(null);\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      loadUser(token);\n    } else {\n      setLoading(false);\n    }\n  }, []);\n\n  const loadUser = async (token) => {\n    try {\n      const config = {\n        headers: {\n          'x-auth-token': token\n        }\n      };\n      const res = await axios.get('http://localhost:5000/api/user/profile', config);\n      setUser(res.data);\n    } catch (error) {\n      localStorage.removeItem('token');\n    }\n    setLoading(false);\n  };\n\n  const login = async (email, password) => {\n    try {\n      const res = await axios.post('http://localhost:5000/api/auth/login', {\n        email,\n        password\n      });\n      localStorage.setItem('token', res.data.token);\n      await loadUser(res.data.token);\n      return true;\n    } catch (error) {\n      throw error.response?.data?.message || 'Login failed';\n    }\n  };\n\n  const register = async (email, password) => {\n    try {\n      const res = await axios.post('http://localhost:5000/api/auth/register', {\n        email,\n        password\n      });\n      localStorage.setItem('token', res.data.token);\n      await loadUser(res.data.token);\n      return true;\n    } catch (error) {\n      throw error.response?.data?.message || 'Registration failed';\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n  };\n\n  const updateProfile = async (profileData) => {\n    try {\n      const config = {\n        headers: {\n          'x-auth-token': localStorage.getItem('token')\n        }\n      };\n      const res = await axios.put('http://localhost:5000/api/user/profile', profileData, config);\n      setUser(res.data);\n      return true;\n    } catch (error) {\n      throw error.response?.data?.message || 'Profile update failed';\n    }\n  };\n\n  return (\n    <AuthContext.Provider value={{\n      user,\n      loading,\n      login,\n      register,\n      logout,\n      updateProfile\n    }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}